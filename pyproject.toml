[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "result-ai-sdk"
version = "0.1.0"
description = "A Python SDK for monitoring LLM calls"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Itzhak Guma", email = "your.email@example.com"}
]
dependencies = [
    "openai>=1.0.0",
    "requests>=2.25.0",
    "wrapt>=1.14.1",
    "packaging>=25.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/yourusername/testai"
Documentation = "https://github.com/yourusername/testai#readme"
Repository = "https://github.com/yourusername/testai.git"
Issues = "https://github.com/yourusername/testai/issues"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "flake8-bugbear",
    "flake8-comprehensions",
    "mypy",
    "types-requests",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.autopep8]
max_line_length = 88
in-place = true
recursive = true
aggressive = 3

[tool.ruff]
line-length = 88
output-format = "grouped"
target-version = "py38"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  # isort
  "I",
  # bugbear rules
  "B",
  # remove unused imports
  "F401",
  # bare except statements
  "E722",
  # unused arguments
  "ARG",
  # print statements
  "T201",
  "T203",
  # import rules
  "TID251",
]

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
